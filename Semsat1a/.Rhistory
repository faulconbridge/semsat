download.file("https://github.com/faulconbridge/semsat/raw/master/Semsat1b/Semsat1b_compiled.csv", "semsat1b.csv", "wget", extra="--no-check-certificate")
semsat1b <- read.csv("semsat1b.csv",header=TRUE,sep=",")
raw <- subset(semsat1b, ((BIAS=="dominant" | BIAS=="subordinate")
& ANSWER=="M") | (BIAS=="unrelated" & ANSWER=="C"),select=c(
PID,BIAS,REPS,Elapsed,MS,STDEV,IQR))
raw <- within(raw, {
BIAS <- factor(BIAS)
REPS <- factor(REPS)
PID <- factor(PID)
})
raw.MS <- subset(raw, select=c(PID:MS))
raw.MS <- na.omit(raw.MS)
View(raw.MS)
xyplot(MS ~ Elapsed | REPS+BIAS, data = raw.MS, groups = PID,
type = "o", panel = panel.superpose)
library(lattice)
xyplot(MS ~ Elapsed | REPS+BIAS, data = raw.MS, groups = PID,
type = "o", panel = panel.superpose)
time.linear <- lme(STDEV ~ BIAS * REPS * Elapsed,
random = list(PID = pdDiag(~ Elapsed)), na.action=na.omit, data = raw.stdev)
library(nlme)
time.linear <- lme(STDEV ~ BIAS * REPS * Elapsed,
random = list(PID = pdDiag(~ Elapsed)), na.action=na.omit, data = raw.stdev)
raw.stdev <- subset(raw, select=c(PID:Elapsed,STDEV))
raw.stdev <- na.omit(raw.stdev)
time.linear <- lme(STDEV ~ BIAS * REPS * Elapsed,
random = list(PID = pdDiag(~ Elapsed)), na.action=na.omit, data = raw.stdev)
summary(time.linear)
anova(time.linear)
fitted <- fitted(time.linear, level=0)
with(raw.stdev, plot(Elapsed[BIAS=="dominant"], fitted[BIAS=="dominant"], ylim = c(500, 2000),
xlab = "time", ylab = "predicted", type = "b", col = "green"))
with(raw.stdev, points(Elapsed[BIAS=="subordinate"], fitted[BIAS=="subordinate"],
pch = 4, type = "b", col = "red"))
with(raw.stdev, points(Elapsed[BIAS=="unrelated"], fitted[BIAS=="unrelated"],
pch = 16, type = "b", col = "blue"))
source('~/.active-rstudio-document', echo=TRUE)
library(xtable)
time.linear <- lme(STDEV ~ BIAS * REPS * Elapsed,
random = list(PID = pdDiag(~ Elapsed)), na.action=na.omit, data = raw.stdev)
xt <- xtable(summary(time.linear))
xt2<-xtable(anova(time.linear))
print(xt2)
View(raw)
raw.noElapse <- subset(raw, is.na(Elapsed)==TRUE,select=c(PID:Elapsed,STDEV))
View(raw.noElapse)
summary(raw.noElapse$REPS)
raw.noElapse <- subset(raw, is.na(Elapsed)==TRUE,select=c(PID:MS))
summary(raw.noElapse$REPS)
rm(raw.noElapse)
download.file("https://github.com/faulconbridge/semsat/raw/master/Semsat2/Semsat2_compiled.csv", "semsat2.csv", "wget", extra="--no-check-certificate")
semsat2 <- read.csv("semsat2.csv",header=TRUE,sep=",")
raw <- semsat2
raw <- within(raw, {
BIAS <- factor(BIAS)
HomType <- factor(HomType)
REPS <- factor(REPS)
PID <- factor(PID)
STDEV <- MS.3.STDEV
IQR <- MS.IQR
})
raw <- subset(raw, (BIAS=="dominant" & ANSWER=="M") |
(BIAS=="subordinate" & ANSWER=="M") |
(BIAS=="unrelated" & (HomType=="NV" | HomType=="NN")
& ANSWER=="C"),
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
raw <- subset(raw, PID!=57 | PID!=42 | PID!=14,
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
View(raw)
raw <- semsat2
raw <- within(raw, {
BIAS <- factor(BIAS)
HomType <- factor(HomType)
REPS <- factor(REPS)
PID <- factor(PID)
STDEV <- MS.3.STDEV
IQR <- MS.IQR
})
raw <- subset(raw, (BIAS=="dominant" & ANSWER=="M") |
(BIAS=="subordinate" & ANSWER=="M") |
(BIAS=="unrelated" & (HomType=="NV" | HomType=="NN")
& ANSWER=="C"),
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
raw <- subset(raw, PID!=57 & PID!=42 & PID!=14,
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
head(raw)
raw.mean <- aggregate(raw$MS,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
colnames(raw.mean) <- c("PID","BIAS","HomType","REPS","MS")
raw.stdev <- aggregate(raw$stdev,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
raw.stdev <- aggregate(raw$STDEV,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
colnames(raw.stdev) <- c("PID","BIAS","HomType","REPS","STDEV")
raw.IQR <- aggregate(raw$IQR,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
colnames(raw.mean) <- c("PID","BIAS","HomType","REPS","IQR")
View(raw.stdev)
?aggregate
raw.stdev <- subset(raw, select=c(PID,BIAS,HomType,REPS,STDEV))
raw.stdev <- na.omit(raw.stdev)
raw.mean.stdev <- aggregate(raw.mean$STDEV,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
raw.stdev <- subset(raw, select=c(PID,BIAS,HomType,REPS,STDEV))
raw.stdev <- na.omit(raw.stdev)
raw.mean.stdev <- aggregate(raw.mean$STDEV,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
View(raw.stdev)
raw.mean.stdev <- aggregate(raw.stdev$STDEV,
by=list(raw$PID,raw$BIAS,
raw$HomType,raw$REPS),
FUN='mean')
raw.mean.stdev <- aggregate(raw.stdev$STDEV,
by=list(raw.stdev$PID,raw.stdev$BIAS,
raw.stdev$HomType,raw.stdev$REPS),
FUN='mean')
colnames(raw.mean.stdev) <- c("PID","BIAS","HomType","REPS","STDEV")
View(raw.mean.stdev)
raw.MS <- subset(raw,select=c(PID:MS))
raw.ms <- na.omit(raw.ms)
raw.MS <- na.omit(raw.MS)
raw.mean.MS <- aggregate(raw.MS$MS,
by=list(raw.MS$PID,raw.MS$BIAS,
raw.MS$HomType,raw.MS$REPS),
FUN='mean')
colnames(raw.mean.MS) <- c("PID","BIAS","HomType","REPS","MS")
raw.IQR <- subset(raw, select=c(PID,BIAS,HomType,REPS,IQR))
raw.IQR <- na.omit(raw.IQR)
raw.mean.IQR <- aggregate(raw.IQR$IQR,
by=list(raw.IQR$PID,raw.IQR$BIAS,
raw.IQR$HomType,raw.IQR$REPS),
FUN='mean')
colnames(raw.mean.IQR) <- c("PID","BIAS","HomType","REPS","IQR")
raw <- semsat2
# Specify which variables should be treated as factors
raw <- within(raw, {
BIAS <- factor(BIAS)
HomType <- factor(HomType)
REPS <- factor(REPS)
PID <- factor(PID)
STDEV <- MS.3.STDEV
IQR <- MS.IQR
})
# Strip out all filler and incorrectly-answered items
raw <- subset(raw, (BIAS=="dominant" & ANSWER=="M") |
(BIAS=="subordinate" & ANSWER=="M") |
(BIAS=="unrelated" & (HomType=="NV" | HomType=="NN")
& ANSWER=="C"),
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
# Strep out participants who encountered bugs during the experiment
raw <- subset(raw, PID!=57 | PID!=42 | PID!=14,
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
raw.MS <- subset(raw,select=c(PID:MS))
raw.MS <- na.omit(raw.MS)
raw.mean.MS <- aggregate(raw.MS$MS,
by=list(raw.MS$PID,raw.MS$BIAS,
raw.MS$HomType,raw.MS$REPS),
FUN='mean')
colnames(raw.mean.MS) <- c("PID","BIAS","HomType","REPS","MS")
raw.stdev <- subset(raw, select=c(PID,BIAS,HomType,REPS,STDEV))
raw.stdev <- na.omit(raw.stdev)
raw.mean.stdev <- aggregate(raw.stdev$STDEV,
by=list(raw.stdev$PID,raw.stdev$BIAS,
raw.stdev$HomType,raw.stdev$REPS),
FUN='mean')
colnames(raw.mean.stdev) <- c("PID","BIAS","HomType","REPS","STDEV")
raw.IQR <- subset(raw, select=c(PID,BIAS,HomType,REPS,IQR))
raw.IQR <- na.omit(raw.IQR)
raw.mean.IQR <- aggregate(raw.IQR$IQR,
by=list(raw.IQR$PID,raw.IQR$BIAS,
raw.IQR$HomType,raw.IQR$REPS),
FUN='mean')
colnames(raw.mean.IQR) <- c("PID","BIAS","HomType","REPS","IQR")
raw.aov <- aov(MS ~ BIAS*HomType*REPS+Error(PID),
data=raw.mean.MS)
summary(raw.aov)
stdev.aov <- aov(STDEV ~ BIAS*HomType*REPS+Error(PID),
data=raw.mean.stdev)
summary(stdev.aov)
iqr.aov <- aov(IQR ~ BIAS*HomType*REPS+Error(PID),
data=raw.mean.IQR)
summary(iqr.aov)
semsat2 <- read.csv(download.file("https://github.com/faulconbridge/semsat/raw/master/Semsat2/Semsat2_compiled.csv", "semsat2.csv", "wget", extra="--no-check-certificate"),header=TRUE,sep=",")
download.file("https://github.com/faulconbridge/semsat/raw/master/Semsat2/Semsat2_compiled.csv", "semsat2.csv", "wget", extra="--no-check-certificate")
semsat2 <- read.csv("semsat2.csv",header=TRUE,sep=",")
raw <- semsat2
# Specify which variables should be treated as factors
raw <- within(raw, {
BIAS <- factor(BIAS)
HomType <- factor(HomType)
REPS <- factor(REPS)
PID <- factor(PID)
STDEV <- MS.3.STDEV
IQR <- MS.IQR
})
# Strip out all filler and incorrectly-answered items
raw <- subset(raw, (BIAS=="dominant" & ANSWER=="M") |
(BIAS=="subordinate" & ANSWER=="M") |
(BIAS=="unrelated" & (HomType=="NV" | HomType=="NN")
& ANSWER=="C"),
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
# Strip out participants who encountered bugs during the experiment
raw <- subset(raw, PID!=57 | PID!=42 | PID!=14,
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
# Subset data to include untrimmed MS response times
raw.MS <- subset(raw,select=c(PID:MS))
raw.MS <- na.omit(raw.MS)
# Take the participant average RTs for each condition
raw.mean.MS <- aggregate(raw.MS$MS,
by=list(raw.MS$PID,raw.MS$BIAS,
raw.MS$HomType,raw.MS$REPS),
FUN='mean')
colnames(raw.mean.MS) <- c("PID","BIAS","HomType","REPS","MS")
# Subset the data to remove outliers beyond +-3 sd
raw.stdev <- subset(raw, select=c(PID,BIAS,HomType,REPS,STDEV))
raw.stdev <- na.omit(raw.stdev)
# Take the participant average RTs for each condition
raw.mean.stdev <- aggregate(raw.stdev$STDEV,
by=list(raw.stdev$PID,raw.stdev$BIAS,
raw.stdev$HomType,raw.stdev$REPS),
FUN='mean')
colnames(raw.mean.stdev) <- c("PID","BIAS","HomType","REPS","STDEV")
library(multcomp)
install.packages("multcomp")
library(multcomp)
stdev.aov <- aov(STDEV ~ BIAS*HomType*REPS+Error(PID),
data=raw.mean.stdev)
raw.mean.stdev$3Way <- with(raw.mean.stdev,interaction(BIAS,HomType,REPS,sep="x"))
raw.mean.stdev$BHR <- with(raw.mean.stdev,interaction(BIAS,HomType,REPS,sep="x"))
View(raw.mean.stdev)
stdev.aov2 <- aov(STDEV~BHR+Error(PID),data=raw.mean.stdev)
l2 <- glht(stdev.aov2,linfct = mcp(BHR = "Tukey"))
library(lme)
library(nlme)
?lme
test <- lme(STDEV~BHR,random=list(PID),data=raw.mean.stdev)
?lme
test <- lme(STDEV~BHR,random=~PID,data=raw.mean.stdev)
test <- lme(STDEV~BHR,random=list(~PID),data=raw.mean.stdev)
test <- lme(STDEV~PID+BHR,random=~1,data=raw.mean.stdev)
?glht
stdev.aov2 <- aov(STDEV~BHR+Error(PID),data=raw.mean.stdev)
l2 <- glht(stdev.aov2,linfct = mcp(BHR = "Tukey"))
l2 <- glht(aov(STDEV~BHR+Error(PID),data=raw.mean.stdev),linfct = mcp(BHR = "Tukey"))
stdev.aov2 <- aov(STDEV~BHR, data=raw.mean.stdev)
l2 <- glht(stdev.aov2,linfct = mcp(BHR = "Tukey"))
stdev.aov2 <- aov(STDEV~BHR, data=raw.mean.stdev)
stdev.aov2.err <- aov(STDEV~BHR+Error(PID), data=raw.mean.stdev)
class(stdev.aov2)
class(stdev.aov2.err)
class(stdev.aov2.err[["PID"]])
names(stdev.aov2)
names(stdev.aov2.err[["PID"]])
setdiff(names(stdev.aov2), names(stdev.aov2.err[["PID"]]))
l2 <- glht(stdev.aov2[["PID"]],linfct = mcp(BHR = "Tukey"))
stdev.lme <- lme(STDEV~BHR, random=~1|PID, data=raw.mean.stdev)
anova(stdev.lme)
stdev.lme2 <- lme(STDEV~BIAS+HomType+REPS, random=~1|PID, data=raw.mean.stdev)
anova(stdev.lme2)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
rm(stdev.aov2,stdev.aov2.err)
rm(stdev.lme2)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
stdev.lme <- lme(STDEV~BHR, random=~1|PID/BHR, data=raw.mean.stdev)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
stdev.lme <- lme(STDEV~BHR, random=~1|PID, data=raw.mean.stdev)
stdev.aov2 <- aov(STDEV~factor(BHR), data=raw.mean.stdev)
stdev.lme <- lme(STDEV~factor(BHR), random=~1|PID, data=raw.mean.stdev)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
raw.mean.stdev$BHR <- factor(raw.mean.stdev$BHR)
stdev.lme <- lme(STDEV~BHR, random=~1|PID, data=raw.mean.stdev)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
summary(l2)
raw2 <- subset(raw, (BIAS=="dominant" & ANSWER=="M") |
(BIAS=="subordinate" & ANSWER=="M"),
select=c(PID,BIAS,HomType,REPS,
ANSWER,MS,STDEV,IQR))
raw.stdev <- subset(raw2, select=c(PID,BIAS,HomType,REPS,STDEV))
raw.stdev <- na.omit(raw.stdev)
raw.mean.stdev <- aggregate(raw.stdev$STDEV,
by=list(raw.stdev$PID,raw.stdev$BIAS,
raw.stdev$HomType,raw.stdev$REPS),
FUN='mean')
colnames(raw.mean.stdev) <- c("PID","BIAS","HomType","REPS","STDEV")
stdev.aov <- aov(STDEV ~ BIAS*HomType*REPS+Error(PID),
data=raw.mean.stdev)
print(xtable(summary(stdev.aov)),type="html")
summary(stdev.aov)
raw.mean.stdev$BHR <- with(raw.mean.stdev,interaction(BIAS,HomType,REPS,sep="x"))
raw.mean.stdev$BHR <- factor(raw.mean.stdev$BHR)
stdev.lme <- lme(STDEV~BHR, random=~1|PID, data=raw.mean.stdev)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
summary(l2)
l2 <- glht(stdev.lme,linfct = mcp(BHR = "LSD"))
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Bonferroni"))
l2 <- glht(stdev.lme,linfct = mcp(BHR = "Tukey"))
